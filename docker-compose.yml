services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=verifiable_ai
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Express backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"  # Agent port
      - "3002:3002"  # API port
    env_file:
      - ./.env
    environment:
      - PORT=3002
      - AGENT_PORT=3001
      - NODE_ENV=production
      - PYTHON=/usr/bin/python3
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL}
      - ETHEREUM_PRIVATE_KEY=${ETHEREUM_PRIVATE_KEY}
      - MAIN_WALLET_ID=${MAIN_WALLET_ID:-main-wallet}
      - MAIN_WALLET_KEY=${MAIN_WALLET_KEY:-main-wallet-key}
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/verifiable_ai
    restart: unless-stopped
    volumes:
      - backend_data:/app/data
    depends_on:
      postgres:
        condition: service_healthy

  # Next.js frontend service
  frontend:
    build:
      context: ./credo-next-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3002
      - NODE_ENV=production
      - PYTHON=/usr/bin/python3

volumes:
  backend_data:
  postgres_data:

networks:
  default:
    name: credo-network 